<!DOCTYPE ULXR-IDL>
<ULXR-IDL version='1.7.5'>
<SOURCE>/home/ea/Dokumente/src/ulxmlrpcpp/branches/1_7_BRANCH/ulxmlrpcpp/stubber/ulxr2xml/ulxridl_test.h</SOURCE>
<INCLUDE>&lt;string&gt;</INCLUDE>
<CLASS>
    <NAME>ext::IdlInterface</NAME>
</CLASS>
<CLASS>
    <NAME>myname::UlxrIdlTest</NAME>
    <SUPER>ext::IdlInterface</SUPER>
    <CONSTRUCTOR>
        <NAME>UlxrIdlTest</NAME>
    </CONSTRUCTOR>
    <CONSTRUCTOR>
        <ARG><TYPE>int</TYPE><NAME>i</NAME></ARG>
        <ARG><TYPE  qleft="const" qright="&amp;">std::string</TYPE><NAME>s</NAME></ARG>
        <NAME>UlxrIdlTest</NAME>
    </CONSTRUCTOR>
    <METHOD virtual='1'>
        <TYPE>void</TYPE>
        <NAME>first_url4</NAME>
    </METHOD>
    <METHOD virtual='1'>
        <TYPE qright="*">std::string</TYPE>
        <NAME>first_url4</NAME>
        <ARG><TYPE>int</TYPE><NAME>i</NAME></ARG>
    </METHOD>
    <METHOD virtual='1'>
        <TYPE qright="*">std::string</TYPE>
        <NAME>first_url4</NAME>
        <ARG><TYPE>long int</TYPE><NAME>li</NAME></ARG>
    </METHOD>
    <METHOD virtual='1'>
        <TYPE  qleft="const" qright="*">char</TYPE>
        <NAME>first_url4</NAME>
        <ARG><TYPE>float</TYPE><NAME>li</NAME></ARG>
    </METHOD>
    <METHOD virtual='1'>
        <TYPE qright="* const">wchar_t</TYPE>
        <NAME>first_url4</NAME>
        <ARG><TYPE>double</TYPE><NAME>li</NAME></ARG>
    </METHOD>
    <METHOD qual="const" virtual='1'>
        <TYPE>std::string</TYPE>
        <NAME>constTest</NAME>
    </METHOD>
    <METHOD qual="const" virtual='1'>
        <TYPE qright="&amp;">std::string</TYPE>
        <NAME>constRefTest</NAME>
    </METHOD>
    <METHOD qual="const" virtual='1'>
        <TYPE qright="*">long int</TYPE>
        <NAME>firstViewConst</NAME>
    </METHOD>
    <METHOD virtual='1'>
        <TYPE qright="*">std::string</TYPE>
        <NAME>firstView</NAME>
    </METHOD>
    <METHOD qual="const" virtual='1'>
        <TYPE qright="*">std::wstring</TYPE>
        <NAME>nextView1</NAME>
        <ARG><TYPE>int</TYPE><NAME>i</NAME></ARG>
        <ARG><TYPE qright="*">long int</TYPE><NAME>l</NAME></ARG>
        <ARG><TYPE qright="&amp;">std::string</TYPE><NAME>s</NAME></ARG>
        <ARG><TYPE  qleft="const" qright="*">bool</TYPE><NAME>b</NAME></ARG>
        <ARG><TYPE>char</TYPE><NAME>c</NAME></ARG>
    </METHOD>
    <METHOD qual="const" virtual='1'>
        <TYPE qright="*">std::basic_string&lt;char&gt;</TYPE>
        <NAME>nextView2</NAME>
        <ARG><TYPE>int</TYPE><NAME>i</NAME></ARG>
        <ARG><TYPE>long int</TYPE><NAME>l</NAME></ARG>
        <ARG><TYPE qright="&amp;">std::string</TYPE><NAME>s</NAME></ARG>
        <ARG><TYPE qright="* const">bool</TYPE><NAME>b</NAME></ARG>
        <ARG><TYPE>char</TYPE><NAME>c</NAME></ARG>
    </METHOD>
    <METHOD>
        <TYPE>void</TYPE>
        <NAME>getNumObjects</NAME>
        <ARG><TYPE>std::string</TYPE><NAME>s</NAME></ARG>
    </METHOD>
    <METHOD>
        <TYPE  qleft="const" qright="*">std::basic_string&lt;wchar_t&gt;</TYPE>
        <NAME>getObject</NAME>
        <ARG><TYPE  qleft="const" qright="&amp;">std::string</TYPE><NAME>s</NAME></ARG>
    </METHOD>
    <METHOD throw='/* todo */'>
        <TYPE>int</TYPE>
        <NAME>getNumPages</NAME>
        <ARG><TYPE  qleft="const" qright="&amp;">std::wstring</TYPE><NAME>s</NAME></ARG>
    </METHOD>
    <METHOD>
        <TYPE  qleft="const" qright="*">std::string</TYPE>
        <NAME>last_url4</NAME>
    </METHOD>
    <METHOD virtual='1'>
        <TYPE qright="*">std::string</TYPE>
        <NAME>last_url4</NAME>
        <ARG><TYPE>int</TYPE><NAME>i</NAME></ARG>
    </METHOD>
    <METHOD throw='/* todo */' virtual='1'>
        <TYPE qright="*">std::string</TYPE>
        <NAME>last_url4</NAME>
        <ARG><TYPE>long int</TYPE><NAME>li</NAME></ARG>
    </METHOD>
</CLASS>
<FUNCTION>
        <TYPE>void</TYPE>
        <NAME>funcs::free_function1</NAME>
        <ARG><TYPE>int</TYPE><NAME>i</NAME></ARG>
</FUNCTION>
<FUNCTION>
        <TYPE>long int</TYPE>
        <NAME>funcs::free_function1</NAME>
        <ARG><TYPE>long int</TYPE><NAME>i</NAME></ARG>
        <ARG><TYPE>float</TYPE><NAME>f</NAME></ARG>
</FUNCTION>
<FUNCTION>
        <TYPE qright="*">std::string</TYPE>
        <NAME>inline_func::free_function2</NAME>
        <ARG><TYPE qright="*">long int</TYPE><NAME>i</NAME></ARG>
        <ARG><TYPE>float</TYPE><NAME>f</NAME></ARG>
</FUNCTION>
</ULXR-IDL>
